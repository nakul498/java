GRAPHS
It is network of nodes
- vertex - here A,B,C is vertex/node
        A ----- B------C

- edge the path is edge
    - directional
    A--------> B-------->C
    - bidirectional/ undirectional 
    A-------B--------C
    no direction is specified

    - weighted ( it is associated with edges)
        10      14
    A--------B--------C

    - unweighted
    A-------B---------C

Storing a graph

1. Adjacency List (most common/ efficient)
2. adjancency matrix
3. edge list 
4. 2d matrix

Adjacency list -> list of list
eg
    0---2
        |\
        | \
        3--1
in this case size of graph is equal to number of verteces i.e 4 

vertex-wise
0 -> {0,2} source, destination
1 -> {1,2},{1,3}
2 -> {2,0},{2,1},{2,3}
3 -> {3,1}, {3,2}

ArrayList<Edge> graph[V]
static class edge{
    int src 
    int dest
}

